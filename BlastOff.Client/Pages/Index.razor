@page "/"
@using Microsoft.Extensions.Configuration
@using System.Collections
@using System.Net.Http
@using System.IO
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq;


@inject IConfiguration Configuration
@inject HttpClient httpClient
@inject IDialogService DialogService
@inject IImageService ImageService



<PageTitle>BlastOff</PageTitle>

@if (image != null)
{
    <div class="p-4">
        <h1 class="text-6xl">@image.Title</h1>
        <p class="text-2xl">(@image.Date)</p>
        @if (image.Copyright != null)
        {
            <p>Copyright: @image.Copyright</p>
        }
    </div>
    <div class="flex justify-center p-4">
        <img src="@image.Url" class="rounded-lg h-500 w-500 flex items-center justify-center"><br />
    </div>
}

@if (!ImageList.Any())
{
    <p>Loading some images...</p>
}
else
{
    <div class="p-2 grid grid-cols-1 sm:grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-3">
        @foreach (var image in ImageList)
        {
            <ImageCard ImageDetails="image" />
        }
    </div>
}


@code
{
    
    [Parameter]
    public APODImage ImageDetails { get; set; }

    private APODImage image;
    public IEnumerable<APODImage> ImageList { get; set; } = new List<APODImage>();


    protected override async Task OnInitializedAsync()
    {
        //ImageService imageService = new ImageService();

        string apiKey = Configuration["APODApiKey"];

        Console.WriteLine(apiKey);

        // var response = await ImageService.GetImage(apiKey);
        // image = response as APODImage;
        

        //Console.WriteLine(image.GetType());
        //Console.WriteLine(image.Url);

        ImageList = await ImageService.GetImages(days: 10, apiKey);


    }

    private void OpenDialog()
    {
        var parameters = new DialogParameters { { "ImageDetails", ImageDetails } };
        DialogService.Show<ImageDialog>(ImageDetails.Title, parameters);
    }

}
